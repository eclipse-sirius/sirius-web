extend type Subscription {
  formDescriptionEditorEvent(input: FormDescriptionEditorEventInput!): FormDescriptionEditorEventPayload!
}

input FormDescriptionEditorEventInput {
  id: ID!
  editingContextId: ID!
  formDescriptionEditorId: ID!
}

union FormDescriptionEditorEventPayload = ErrorPayload | FormDescriptionEditorRefreshedEventPayload | SubscribersUpdatedEventPayload

type FormDescriptionEditorRefreshedEventPayload {
  id: ID!
  formDescriptionEditor: FormDescriptionEditor!
}

type FormDescriptionEditor implements Representation {
  id: ID!
  metadata: RepresentationMetadata!
  widgets: [FormDescriptionEditorWidget!]!
}

type FormDescriptionEditorDescription implements RepresentationDescription {
  id: ID!
  label: String!
}

type FormDescriptionEditorWidget {
	id: ID!
	kind: String!
	label: String!
}