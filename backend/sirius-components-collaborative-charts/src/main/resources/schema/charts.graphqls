extend type Subscription {
  hierarchyEvent(input: HierarchyEventInput!): HierarchyEventPayload!
}

input HierarchyEventInput {
  id: ID!
  editingContextId: ID!
  hierarchyId: ID!
}

union HierarchyEventPayload = ErrorPayload | SubscribersUpdatedEventPayload | HierarchyRefreshedEventPayload

type HierarchyRefreshedEventPayload {
  id: ID!
  hierarchy: Hierarchy!
}

type Hierarchy implements Representation {
  id: ID!
  metadata: RepresentationMetadata!
  targetObjectId: ID!
  children: [HierarchyNode!]!
}

type BarChart implements Representation {
  id: ID!
  metadata: RepresentationMetadata!
  label: String!
  entries: [BarChartEntry!]!
}

type BarChartEntry {
  key: String!
  value: Float!
}

type PieChart implements Representation {
  id: ID!
  metadata: RepresentationMetadata!
  entries: [PieChartEntry!]!
}

type PieChartEntry {
  key: String!
  value: Float!
}

type HierarchyNode {
  id: ID!
  label: String!
  targetObjectId: ID!
  children: [HierarchyNode]!
}

type HierarchyDescription implements RepresentationDescription {
  id: ID!
  label: String!
}
