extend type Subscription {
  formDescriptionEditorEvent(input: FormDescriptionEditorEventInput!): FormDescriptionEditorEventPayload!
}

input FormDescriptionEditorEventInput {
  id: ID!
  editingContextId: ID!
  formDescriptionEditorId: ID!
}

union FormDescriptionEditorEventPayload = ErrorPayload | FormDescriptionEditorRefreshedEventPayload | SubscribersUpdatedEventPayload

type FormDescriptionEditorRefreshedEventPayload {
  id: ID!
  formDescriptionEditor: FormDescriptionEditor!
}

type FormDescriptionEditor implements Representation {
  id: ID!
  metadata: RepresentationMetadata!
  toolbarActions: [ToolbarAction!]!
  widgets: [Widget!]!
}

type FormDescriptionEditorDescription implements RepresentationDescription {
  id: ID!
  label: String!
}

extend type Mutation {
  addWidget(input: AddWidgetInput!): AddWidgetPayload!
  deleteWidget(input: DeleteWidgetInput!): DeleteWidgetPayload!
  moveWidget(input: MoveWidgetInput!): MoveWidgetPayload!
  addToolbarAction(input: AddToolbarActionInput!): AddToolbarActionPayload!
  deleteToolbarAction(input: DeleteToolbarActionInput!): DeleteToolbarActionPayload!
  moveToolbarAction(input: MoveToolbarActionInput!): MoveToolbarActionPayload!
}

input AddWidgetInput {
  id: ID!
  editingContextId: ID!
  representationId: ID!
  containerId: ID
  kind: String!
  index: Int!
}

union AddWidgetPayload = AddWidgetSuccessPayload | ErrorPayload

type AddWidgetSuccessPayload {
  id: ID!
}

input DeleteWidgetInput {
  id: ID!
  editingContextId: ID!
  representationId: ID!
  widgetId: String!
}

union DeleteWidgetPayload = DeleteWidgetSuccessPayload | ErrorPayload

type DeleteWidgetSuccessPayload {
  id: ID!
}

input MoveWidgetInput {
  id: ID!
  editingContextId: ID!
  representationId: ID!
  containerId: ID
  widgetId: String!
  index: Int!
}

union MoveWidgetPayload = MoveWidgetSuccessPayload | ErrorPayload

type MoveWidgetSuccessPayload {
  id: ID!
}

input AddToolbarActionInput {
  id: ID!
  editingContextId: ID!
  representationId: ID!
  containerId: ID
}

union AddToolbarActionPayload = AddToolbarActionSuccessPayload | ErrorPayload

type AddToolbarActionSuccessPayload {
  id: ID!
}

input DeleteToolbarActionInput {
  id: ID!
  editingContextId: ID!
  representationId: ID!
  toolbarActionId: String!
}

union DeleteToolbarActionPayload = DeleteToolbarActionSuccessPayload | ErrorPayload

type DeleteToolbarActionSuccessPayload {
  id: ID!
}

input MoveToolbarActionInput {
  id: ID!
  editingContextId: ID!
  representationId: ID!
  containerId: ID
  toolbarActionId: String!
  index: Int!
}

union MoveToolbarActionPayload = MoveToolbarActionSuccessPayload | ErrorPayload

type MoveToolbarActionSuccessPayload {
  id: ID!
}