/*******************************************************************************
 * Copyright (c) 2024 Obeo.
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************/
package org.eclipse.sirius.components.papaya.provider.spec;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.edit.provider.ComposedImage;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.sirius.components.papaya.Attribute;
import org.eclipse.sirius.components.papaya.provider.AttributeItemProvider;
import org.eclipse.sirius.components.papaya.provider.PapayaItemProviderAdapterFactory;
import org.eclipse.sirius.components.papaya.provider.spec.images.VisibilityOverlayImageProvider;

/**
 * Customization of the item provider implementation generated by EMF.
 *
 * @author sbegaudeau
 */
public class AttributeItemProviderSpec extends AttributeItemProvider {
    public AttributeItemProviderSpec(AdapterFactory adapterFactory) {
        super(adapterFactory);
    }

    @Override
    public Object getImage(Object object) {
        if (object instanceof Attribute attribute) {
            var visibilityImage = new VisibilityOverlayImageProvider().overlayImage(this.getResourceLocator(), attribute.getVisibility());

            return new ComposedImage(List.of(
                    this.getResourceLocator().getImage("full/obj16/Attribute.svg"),
                    visibilityImage
            ));
        }
        return this.overlayImage(object, this.getResourceLocator().getImage("full/obj16/Attribute.svg"));
    }

    @Override
    public String getText(Object object) {
        if (object instanceof Attribute attribute && attribute.getName() != null && !attribute.getName().isBlank()) {
            var text = attribute.getName();

            if (attribute.getType() != null) {
                var adapter = new PapayaItemProviderAdapterFactory().adapt(attribute.getType(), IItemLabelProvider.class);
                if (adapter instanceof IItemLabelProvider itemLabelProvider) {
                    text = text + ": " + itemLabelProvider.getText(attribute.getType());
                }
            }

            return text;
        }
        return super.getText(object);
    }
}
