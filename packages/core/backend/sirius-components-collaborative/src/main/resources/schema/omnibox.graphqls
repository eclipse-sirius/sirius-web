extend type Viewer {
  omniboxSearch(editingContextId: ID!, selectedObjectIds: [ID!]!, query: String!): [Object!]!
  omniboxCommands(editingContextId: ID!, selectedObjectIds: [ID!]!, query: String!): ViewerOmniboxCommandsConnection!
}

input OmniboxContextEntry {
  id: ID!
  kind: String!
}

type ViewerOmniboxCommandsConnection {
  edges: [OmniboxCommandsEdge!]!
  pageInfo: PageInfo!
}

type OmniboxCommandsEdge {
  node: OmniboxCommand!
}

type OmniboxCommand {
  id: ID!
  label: String!
  iconURLs: [String!]!
  description: String!
}

extend type Mutation {
  executeOmniboxCommand(input: ExecuteOmniboxCommandInput!) : ExecuteOmniboxCommandPayload!
}

input ExecuteOmniboxCommandInput {
  id: ID!
  editingContextId: ID!
  selectedObjectIds: [ID!]!
  commandId: ID!
}

union ExecuteOmniboxCommandPayload = ErrorPayload | ExecuteOmniboxCommandSuccessPayload

type ExecuteOmniboxCommandSuccessPayload {
  id: ID!
  newSelection: WorkbenchSelection
  messages: [Message]!
}
