extend type Viewer {
  project(projectId: ID!): Project
  projects(page: Int!, limit: Int!): ViewerProjectsConnection!
  projectTemplates(page: Int!, limit: Int!): ViewerProjectTemplatesConnection!
}

type ViewerProjectsConnection {
  edges: [ViewerProjectsEdge!]!
  pageInfo: PageInfo!
}

type ViewerProjectsEdge {
  node: Project!
}

type Project {
  id: ID!
  name: String!
  currentEditingContext: EditingContext!
}

type ViewerProjectTemplatesConnection {
  edges: [ViewerProjectTemplatesEdge!]!
  pageInfo: PageInfo!
}

type ViewerProjectTemplatesEdge {
  node: ProjectTemplate!
}

type ProjectTemplate {
  id: ID!
  label: String!
  imageURL: String!
}

extend type Mutation {
  createProject(input: CreateProjectInput!): CreateProjectPayload!
  renameProject(input: RenameProjectInput!): RenameProjectPayload!
  deleteProject(input: DeleteProjectInput!): DeleteProjectPayload!
  deleteRepresentation(input: DeleteRepresentationInput!): DeleteRepresentationPayload!
}

input CreateProjectInput {
  id: ID!
  name: String!
  natures: [String!]!
}

union CreateProjectPayload = ErrorPayload | CreateProjectSuccessPayload

type CreateProjectSuccessPayload {
  id: ID!
  project: Project!
}

input RenameProjectInput {
  id: ID!
  projectId: ID!
  newName: String!
}

union RenameProjectPayload = ErrorPayload | RenameProjectSuccessPayload

type RenameProjectSuccessPayload {
  id: ID!
}

input DeleteProjectInput {
  id: ID!
  projectId: ID!
}

union DeleteProjectPayload = ErrorPayload | SuccessPayload

extend type Subscription {
  projectEvent(input: ProjectEventInput!): ProjectEventPayload!
}

input ProjectEventInput {
  id: ID!
  projectId: ID!
}

union ProjectEventPayload = ErrorPayload | ProjectRenamedEventPayload

type ProjectRenamedEventPayload {
  id: ID!
  projectId: ID!
  newName: String!
}

input DeleteRepresentationInput {
  id: ID!
  representationId: ID!
}

union DeleteRepresentationPayload = ErrorPayload | DeleteRepresentationSuccessPayload

type DeleteRepresentationSuccessPayload {
  id: ID!
  representationId: ID!
}
