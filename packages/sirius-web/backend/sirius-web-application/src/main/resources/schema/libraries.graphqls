extend type Viewer {
  libraries(page: Int!, limit: Int!): ViewerLibrariesConnection!
  library(namespace: String!, name: String!, version: String!): Library
}

type ViewerLibrariesConnection {
  edges: [ViewerLibrariesEdge!]!
  pageInfo: PageInfo!
}

type ViewerLibrariesEdge {
  node: Library!
}

type Library {
  namespace: String!
  name: String!
  version: String!
  description: String!
  createdOn: Instant!
  currentEditingContext: EditingContext!
}

extend type Mutation {
  publishLibraries(input: PublishLibrariesInput!): PublishLibrariesPayload!
}

input PublishLibrariesInput {
  id: ID!
  projectId: ID!
  publicationKind: String!
  version: String!
  description: String!
}

union PublishLibrariesPayload = ErrorPayload | SuccessPayload
