/*******************************************************************************
 * Copyright (c) 2021, 2022 Obeo.
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************/
package org.eclipse.sirius.components.view.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.sirius.components.view.util.ViewAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers. The adapters generated by this
 * factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}. The adapters
 * also support Eclipse property sheets. Note that most of the adapters are shared among multiple instances. <!--
 * begin-user-doc --> <!-- end-user-doc -->
 *
 * @generated
 */
public class ViewItemProviderAdapterFactory extends ViewAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<>();

    /**
     * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    public ViewItemProviderAdapterFactory() {
        this.supportedTypes.add(IEditingDomainItemProvider.class);
        this.supportedTypes.add(IStructuredItemContentProvider.class);
        this.supportedTypes.add(ITreeItemContentProvider.class);
        this.supportedTypes.add(IItemLabelProvider.class);
        this.supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.View} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ViewItemProvider viewItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.View}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createViewAdapter() {
        if (this.viewItemProvider == null) {
            this.viewItemProvider = new ViewItemProvider(this);
        }

        return this.viewItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.DiagramDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected DiagramDescriptionItemProvider diagramDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.DiagramDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createDiagramDescriptionAdapter() {
        if (this.diagramDescriptionItemProvider == null) {
            this.diagramDescriptionItemProvider = new DiagramDescriptionItemProvider(this);
        }

        return this.diagramDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.NodeDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected NodeDescriptionItemProvider nodeDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.NodeDescription}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createNodeDescriptionAdapter() {
        if (this.nodeDescriptionItemProvider == null) {
            this.nodeDescriptionItemProvider = new NodeDescriptionItemProvider(this);
        }

        return this.nodeDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.EdgeDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected EdgeDescriptionItemProvider edgeDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.EdgeDescription}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEdgeDescriptionAdapter() {
        if (this.edgeDescriptionItemProvider == null) {
            this.edgeDescriptionItemProvider = new EdgeDescriptionItemProvider(this);
        }

        return this.edgeDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.RectangularNodeStyleDescription} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected RectangularNodeStyleDescriptionItemProvider rectangularNodeStyleDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.RectangularNodeStyleDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createRectangularNodeStyleDescriptionAdapter() {
        if (this.rectangularNodeStyleDescriptionItemProvider == null) {
            this.rectangularNodeStyleDescriptionItemProvider = new RectangularNodeStyleDescriptionItemProvider(this);
        }

        return this.rectangularNodeStyleDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ImageNodeStyleDescription} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ImageNodeStyleDescriptionItemProvider imageNodeStyleDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ImageNodeStyleDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createImageNodeStyleDescriptionAdapter() {
        if (this.imageNodeStyleDescriptionItemProvider == null) {
            this.imageNodeStyleDescriptionItemProvider = new ImageNodeStyleDescriptionItemProvider(this);
        }

        return this.imageNodeStyleDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.IconLabelNodeStyleDescription} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected IconLabelNodeStyleDescriptionItemProvider iconLabelNodeStyleDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.IconLabelNodeStyleDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createIconLabelNodeStyleDescriptionAdapter() {
        if (this.iconLabelNodeStyleDescriptionItemProvider == null) {
            this.iconLabelNodeStyleDescriptionItemProvider = new IconLabelNodeStyleDescriptionItemProvider(this);
        }

        return this.iconLabelNodeStyleDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.FreeFormLayoutStrategyDescription} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected FreeFormLayoutStrategyDescriptionItemProvider freeFormLayoutStrategyDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.FreeFormLayoutStrategyDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createFreeFormLayoutStrategyDescriptionAdapter() {
        if (this.freeFormLayoutStrategyDescriptionItemProvider == null) {
            this.freeFormLayoutStrategyDescriptionItemProvider = new FreeFormLayoutStrategyDescriptionItemProvider(this);
        }

        return this.freeFormLayoutStrategyDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ListLayoutStrategyDescription} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ListLayoutStrategyDescriptionItemProvider listLayoutStrategyDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ListLayoutStrategyDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createListLayoutStrategyDescriptionAdapter() {
        if (this.listLayoutStrategyDescriptionItemProvider == null) {
            this.listLayoutStrategyDescriptionItemProvider = new ListLayoutStrategyDescriptionItemProvider(this);
        }

        return this.listLayoutStrategyDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.EdgeStyle} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected EdgeStyleItemProvider edgeStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.EdgeStyle}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEdgeStyleAdapter() {
        if (this.edgeStyleItemProvider == null) {
            this.edgeStyleItemProvider = new EdgeStyleItemProvider(this);
        }

        return this.edgeStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.LabelEditTool}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected LabelEditToolItemProvider labelEditToolItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.LabelEditTool}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLabelEditToolAdapter() {
        if (this.labelEditToolItemProvider == null) {
            this.labelEditToolItemProvider = new LabelEditToolItemProvider(this);
        }

        return this.labelEditToolItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.DeleteTool} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected DeleteToolItemProvider deleteToolItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.DeleteTool}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createDeleteToolAdapter() {
        if (this.deleteToolItemProvider == null) {
            this.deleteToolItemProvider = new DeleteToolItemProvider(this);
        }

        return this.deleteToolItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.NodeTool} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected NodeToolItemProvider nodeToolItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.NodeTool}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createNodeToolAdapter() {
        if (this.nodeToolItemProvider == null) {
            this.nodeToolItemProvider = new NodeToolItemProvider(this);
        }

        return this.nodeToolItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.EdgeTool} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected EdgeToolItemProvider edgeToolItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.EdgeTool}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEdgeToolAdapter() {
        if (this.edgeToolItemProvider == null) {
            this.edgeToolItemProvider = new EdgeToolItemProvider(this);
        }

        return this.edgeToolItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.DropTool} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected DropToolItemProvider dropToolItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.DropTool}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createDropToolAdapter() {
        if (this.dropToolItemProvider == null) {
            this.dropToolItemProvider = new DropToolItemProvider(this);
        }

        return this.dropToolItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.ChangeContext}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ChangeContextItemProvider changeContextItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ChangeContext}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createChangeContextAdapter() {
        if (this.changeContextItemProvider == null) {
            this.changeContextItemProvider = new ChangeContextItemProvider(this);
        }

        return this.changeContextItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.CreateInstance}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected CreateInstanceItemProvider createInstanceItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.CreateInstance}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createCreateInstanceAdapter() {
        if (this.createInstanceItemProvider == null) {
            this.createInstanceItemProvider = new CreateInstanceItemProvider(this);
        }

        return this.createInstanceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.SetValue} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected SetValueItemProvider setValueItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.SetValue}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSetValueAdapter() {
        if (this.setValueItemProvider == null) {
            this.setValueItemProvider = new SetValueItemProvider(this);
        }

        return this.setValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.UnsetValue} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected UnsetValueItemProvider unsetValueItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.UnsetValue}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createUnsetValueAdapter() {
        if (this.unsetValueItemProvider == null) {
            this.unsetValueItemProvider = new UnsetValueItemProvider(this);
        }

        return this.unsetValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.DeleteElement}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected DeleteElementItemProvider deleteElementItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.DeleteElement}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createDeleteElementAdapter() {
        if (this.deleteElementItemProvider == null) {
            this.deleteElementItemProvider = new DeleteElementItemProvider(this);
        }

        return this.deleteElementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.CreateView} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected CreateViewItemProvider createViewItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.CreateView}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createCreateViewAdapter() {
        if (this.createViewItemProvider == null) {
            this.createViewItemProvider = new CreateViewItemProvider(this);
        }

        return this.createViewItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.DeleteView} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected DeleteViewItemProvider deleteViewItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.DeleteView}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createDeleteViewAdapter() {
        if (this.deleteViewItemProvider == null) {
            this.deleteViewItemProvider = new DeleteViewItemProvider(this);
        }

        return this.deleteViewItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.ConditionalNodeStyle}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalNodeStyleItemProvider conditionalNodeStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalNodeStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalNodeStyleAdapter() {
        if (this.conditionalNodeStyleItemProvider == null) {
            this.conditionalNodeStyleItemProvider = new ConditionalNodeStyleItemProvider(this);
        }

        return this.conditionalNodeStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.ConditionalEdgeStyle}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalEdgeStyleItemProvider conditionalEdgeStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalEdgeStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalEdgeStyleAdapter() {
        if (this.conditionalEdgeStyleItemProvider == null) {
            this.conditionalEdgeStyleItemProvider = new ConditionalEdgeStyleItemProvider(this);
        }

        return this.conditionalEdgeStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.FormDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected FormDescriptionItemProvider formDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.FormDescription}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createFormDescriptionAdapter() {
        if (this.formDescriptionItemProvider == null) {
            this.formDescriptionItemProvider = new FormDescriptionItemProvider(this);
        }

        return this.formDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.TextfieldDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected TextfieldDescriptionItemProvider textfieldDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.TextfieldDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTextfieldDescriptionAdapter() {
        if (this.textfieldDescriptionItemProvider == null) {
            this.textfieldDescriptionItemProvider = new TextfieldDescriptionItemProvider(this);
        }

        return this.textfieldDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.CheckboxDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected CheckboxDescriptionItemProvider checkboxDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.CheckboxDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createCheckboxDescriptionAdapter() {
        if (this.checkboxDescriptionItemProvider == null) {
            this.checkboxDescriptionItemProvider = new CheckboxDescriptionItemProvider(this);
        }

        return this.checkboxDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.SelectDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected SelectDescriptionItemProvider selectDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.SelectDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSelectDescriptionAdapter() {
        if (this.selectDescriptionItemProvider == null) {
            this.selectDescriptionItemProvider = new SelectDescriptionItemProvider(this);
        }

        return this.selectDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.MultiSelectDescription} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected MultiSelectDescriptionItemProvider multiSelectDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.MultiSelectDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMultiSelectDescriptionAdapter() {
        if (this.multiSelectDescriptionItemProvider == null) {
            this.multiSelectDescriptionItemProvider = new MultiSelectDescriptionItemProvider(this);
        }

        return this.multiSelectDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.TextAreaDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected TextAreaDescriptionItemProvider textAreaDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.TextAreaDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTextAreaDescriptionAdapter() {
        if (this.textAreaDescriptionItemProvider == null) {
            this.textAreaDescriptionItemProvider = new TextAreaDescriptionItemProvider(this);
        }

        return this.textAreaDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.RadioDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected RadioDescriptionItemProvider radioDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.RadioDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createRadioDescriptionAdapter() {
        if (this.radioDescriptionItemProvider == null) {
            this.radioDescriptionItemProvider = new RadioDescriptionItemProvider(this);
        }

        return this.radioDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.TextfieldDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected TextfieldDescriptionStyleItemProvider textfieldDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.TextfieldDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTextfieldDescriptionStyleAdapter() {
        if (this.textfieldDescriptionStyleItemProvider == null) {
            this.textfieldDescriptionStyleItemProvider = new TextfieldDescriptionStyleItemProvider(this);
        }

        return this.textfieldDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalTextfieldDescriptionStyle} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalTextfieldDescriptionStyleItemProvider conditionalTextfieldDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalTextfieldDescriptionStyle}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalTextfieldDescriptionStyleAdapter() {
        if (this.conditionalTextfieldDescriptionStyleItemProvider == null) {
            this.conditionalTextfieldDescriptionStyleItemProvider = new ConditionalTextfieldDescriptionStyleItemProvider(this);
        }

        return this.conditionalTextfieldDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.CheckboxDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected CheckboxDescriptionStyleItemProvider checkboxDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.CheckboxDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createCheckboxDescriptionStyleAdapter() {
        if (this.checkboxDescriptionStyleItemProvider == null) {
            this.checkboxDescriptionStyleItemProvider = new CheckboxDescriptionStyleItemProvider(this);
        }

        return this.checkboxDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalCheckboxDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalCheckboxDescriptionStyleItemProvider conditionalCheckboxDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalCheckboxDescriptionStyle}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalCheckboxDescriptionStyleAdapter() {
        if (this.conditionalCheckboxDescriptionStyleItemProvider == null) {
            this.conditionalCheckboxDescriptionStyleItemProvider = new ConditionalCheckboxDescriptionStyleItemProvider(this);
        }

        return this.conditionalCheckboxDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.SelectDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected SelectDescriptionStyleItemProvider selectDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.SelectDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSelectDescriptionStyleAdapter() {
        if (this.selectDescriptionStyleItemProvider == null) {
            this.selectDescriptionStyleItemProvider = new SelectDescriptionStyleItemProvider(this);
        }

        return this.selectDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalSelectDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalSelectDescriptionStyleItemProvider conditionalSelectDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalSelectDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalSelectDescriptionStyleAdapter() {
        if (this.conditionalSelectDescriptionStyleItemProvider == null) {
            this.conditionalSelectDescriptionStyleItemProvider = new ConditionalSelectDescriptionStyleItemProvider(this);
        }

        return this.conditionalSelectDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.MultiSelectDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected MultiSelectDescriptionStyleItemProvider multiSelectDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.MultiSelectDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMultiSelectDescriptionStyleAdapter() {
        if (this.multiSelectDescriptionStyleItemProvider == null) {
            this.multiSelectDescriptionStyleItemProvider = new MultiSelectDescriptionStyleItemProvider(this);
        }

        return this.multiSelectDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalMultiSelectDescriptionStyle} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalMultiSelectDescriptionStyleItemProvider conditionalMultiSelectDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalMultiSelectDescriptionStyle}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalMultiSelectDescriptionStyleAdapter() {
        if (this.conditionalMultiSelectDescriptionStyleItemProvider == null) {
            this.conditionalMultiSelectDescriptionStyleItemProvider = new ConditionalMultiSelectDescriptionStyleItemProvider(this);
        }

        return this.conditionalMultiSelectDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.TextareaDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected TextareaDescriptionStyleItemProvider textareaDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.TextareaDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTextareaDescriptionStyleAdapter() {
        if (this.textareaDescriptionStyleItemProvider == null) {
            this.textareaDescriptionStyleItemProvider = new TextareaDescriptionStyleItemProvider(this);
        }

        return this.textareaDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalTextareaDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalTextareaDescriptionStyleItemProvider conditionalTextareaDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalTextareaDescriptionStyle}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalTextareaDescriptionStyleAdapter() {
        if (this.conditionalTextareaDescriptionStyleItemProvider == null) {
            this.conditionalTextareaDescriptionStyleItemProvider = new ConditionalTextareaDescriptionStyleItemProvider(this);
        }

        return this.conditionalTextareaDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.RadioDescriptionStyle}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected RadioDescriptionStyleItemProvider radioDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.RadioDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createRadioDescriptionStyleAdapter() {
        if (this.radioDescriptionStyleItemProvider == null) {
            this.radioDescriptionStyleItemProvider = new RadioDescriptionStyleItemProvider(this);
        }

        return this.radioDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalRadioDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalRadioDescriptionStyleItemProvider conditionalRadioDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalRadioDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalRadioDescriptionStyleAdapter() {
        if (this.conditionalRadioDescriptionStyleItemProvider == null) {
            this.conditionalRadioDescriptionStyleItemProvider = new ConditionalRadioDescriptionStyleItemProvider(this);
        }

        return this.conditionalRadioDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ButtonDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ButtonDescriptionStyleItemProvider buttonDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ButtonDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createButtonDescriptionStyleAdapter() {
        if (this.buttonDescriptionStyleItemProvider == null) {
            this.buttonDescriptionStyleItemProvider = new ButtonDescriptionStyleItemProvider(this);
        }

        return this.buttonDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalButtonDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalButtonDescriptionStyleItemProvider conditionalButtonDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalButtonDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalButtonDescriptionStyleAdapter() {
        if (this.conditionalButtonDescriptionStyleItemProvider == null) {
            this.conditionalButtonDescriptionStyleItemProvider = new ConditionalButtonDescriptionStyleItemProvider(this);
        }

        return this.conditionalButtonDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.BarChartDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected BarChartDescriptionStyleItemProvider barChartDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.BarChartDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createBarChartDescriptionStyleAdapter() {
        if (this.barChartDescriptionStyleItemProvider == null) {
            this.barChartDescriptionStyleItemProvider = new BarChartDescriptionStyleItemProvider(this);
        }

        return this.barChartDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalBarChartDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalBarChartDescriptionStyleItemProvider conditionalBarChartDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalBarChartDescriptionStyle}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalBarChartDescriptionStyleAdapter() {
        if (this.conditionalBarChartDescriptionStyleItemProvider == null) {
            this.conditionalBarChartDescriptionStyleItemProvider = new ConditionalBarChartDescriptionStyleItemProvider(this);
        }

        return this.conditionalBarChartDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.PieChartDescriptionStyle} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected PieChartDescriptionStyleItemProvider pieChartDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.PieChartDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPieChartDescriptionStyleAdapter() {
        if (this.pieChartDescriptionStyleItemProvider == null) {
            this.pieChartDescriptionStyleItemProvider = new PieChartDescriptionStyleItemProvider(this);
        }

        return this.pieChartDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalPieChartDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalPieChartDescriptionStyleItemProvider conditionalPieChartDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalPieChartDescriptionStyle}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalPieChartDescriptionStyleAdapter() {
        if (this.conditionalPieChartDescriptionStyleItemProvider == null) {
            this.conditionalPieChartDescriptionStyleItemProvider = new ConditionalPieChartDescriptionStyleItemProvider(this);
        }

        return this.conditionalPieChartDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.LabelDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected LabelDescriptionItemProvider labelDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.LabelDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLabelDescriptionAdapter() {
        if (this.labelDescriptionItemProvider == null) {
            this.labelDescriptionItemProvider = new LabelDescriptionItemProvider(this);
        }

        return this.labelDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.LabelDescriptionStyle}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected LabelDescriptionStyleItemProvider labelDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.LabelDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLabelDescriptionStyleAdapter() {
        if (this.labelDescriptionStyleItemProvider == null) {
            this.labelDescriptionStyleItemProvider = new LabelDescriptionStyleItemProvider(this);
        }

        return this.labelDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalLabelDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalLabelDescriptionStyleItemProvider conditionalLabelDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalLabelDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalLabelDescriptionStyleAdapter() {
        if (this.conditionalLabelDescriptionStyleItemProvider == null) {
            this.conditionalLabelDescriptionStyleItemProvider = new ConditionalLabelDescriptionStyleItemProvider(this);
        }

        return this.conditionalLabelDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.LinkDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected LinkDescriptionItemProvider linkDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.LinkDescription}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLinkDescriptionAdapter() {
        if (this.linkDescriptionItemProvider == null) {
            this.linkDescriptionItemProvider = new LinkDescriptionItemProvider(this);
        }

        return this.linkDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.LinkDescriptionStyle}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected LinkDescriptionStyleItemProvider linkDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.LinkDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLinkDescriptionStyleAdapter() {
        if (this.linkDescriptionStyleItemProvider == null) {
            this.linkDescriptionStyleItemProvider = new LinkDescriptionStyleItemProvider(this);
        }

        return this.linkDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalLinkDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalLinkDescriptionStyleItemProvider conditionalLinkDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalLinkDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalLinkDescriptionStyleAdapter() {
        if (this.conditionalLinkDescriptionStyleItemProvider == null) {
            this.conditionalLinkDescriptionStyleItemProvider = new ConditionalLinkDescriptionStyleItemProvider(this);
        }

        return this.conditionalLinkDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.ListDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ListDescriptionItemProvider listDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ListDescription}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createListDescriptionAdapter() {
        if (this.listDescriptionItemProvider == null) {
            this.listDescriptionItemProvider = new ListDescriptionItemProvider(this);
        }

        return this.listDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.ListDescriptionStyle}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ListDescriptionStyleItemProvider listDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ListDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createListDescriptionStyleAdapter() {
        if (this.listDescriptionStyleItemProvider == null) {
            this.listDescriptionStyleItemProvider = new ListDescriptionStyleItemProvider(this);
        }

        return this.listDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.ConditionalListDescriptionStyle} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConditionalListDescriptionStyleItemProvider conditionalListDescriptionStyleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ConditionalListDescriptionStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConditionalListDescriptionStyleAdapter() {
        if (this.conditionalListDescriptionStyleItemProvider == null) {
            this.conditionalListDescriptionStyleItemProvider = new ConditionalListDescriptionStyleItemProvider(this);
        }

        return this.conditionalListDescriptionStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.BarChartDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected BarChartDescriptionItemProvider barChartDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.BarChartDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createBarChartDescriptionAdapter() {
        if (this.barChartDescriptionItemProvider == null) {
            this.barChartDescriptionItemProvider = new BarChartDescriptionItemProvider(this);
        }

        return this.barChartDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.PieChartDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PieChartDescriptionItemProvider pieChartDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.PieChartDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPieChartDescriptionAdapter() {
        if (this.pieChartDescriptionItemProvider == null) {
            this.pieChartDescriptionItemProvider = new PieChartDescriptionItemProvider(this);
        }

        return this.pieChartDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.components.view.FlexboxContainerDescription} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected FlexboxContainerDescriptionItemProvider flexboxContainerDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.FlexboxContainerDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createFlexboxContainerDescriptionAdapter() {
        if (this.flexboxContainerDescriptionItemProvider == null) {
            this.flexboxContainerDescriptionItemProvider = new FlexboxContainerDescriptionItemProvider(this);
        }

        return this.flexboxContainerDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.sirius.components.view.ButtonDescription}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ButtonDescriptionItemProvider buttonDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.components.view.ButtonDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createButtonDescriptionAdapter() {
        if (this.buttonDescriptionItemProvider == null) {
            this.buttonDescriptionItemProvider = new ButtonDescriptionItemProvider(this);
        }

        return this.buttonDescriptionItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return this.parentAdapterFactory == null ? this : this.parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return this.supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (this.isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void addListener(INotifyChangedListener notifyChangedListener) {
        this.changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        this.changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public void fireNotifyChanged(Notification notification) {
        this.changeNotifier.fireNotifyChanged(notification);

        if (this.parentAdapterFactory != null) {
            this.parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void dispose() {
        if (this.viewItemProvider != null)
            this.viewItemProvider.dispose();
        if (this.diagramDescriptionItemProvider != null)
            this.diagramDescriptionItemProvider.dispose();
        if (this.nodeDescriptionItemProvider != null)
            this.nodeDescriptionItemProvider.dispose();
        if (this.edgeDescriptionItemProvider != null)
            this.edgeDescriptionItemProvider.dispose();
        if (this.rectangularNodeStyleDescriptionItemProvider != null)
            this.rectangularNodeStyleDescriptionItemProvider.dispose();
        if (this.imageNodeStyleDescriptionItemProvider != null)
            this.imageNodeStyleDescriptionItemProvider.dispose();
        if (this.iconLabelNodeStyleDescriptionItemProvider != null)
            this.iconLabelNodeStyleDescriptionItemProvider.dispose();
        if (this.freeFormLayoutStrategyDescriptionItemProvider != null)
            this.freeFormLayoutStrategyDescriptionItemProvider.dispose();
        if (this.listLayoutStrategyDescriptionItemProvider != null)
            this.listLayoutStrategyDescriptionItemProvider.dispose();
        if (this.edgeStyleItemProvider != null)
            this.edgeStyleItemProvider.dispose();
        if (this.labelEditToolItemProvider != null)
            this.labelEditToolItemProvider.dispose();
        if (this.deleteToolItemProvider != null)
            this.deleteToolItemProvider.dispose();
        if (this.nodeToolItemProvider != null)
            this.nodeToolItemProvider.dispose();
        if (this.edgeToolItemProvider != null)
            this.edgeToolItemProvider.dispose();
        if (this.dropToolItemProvider != null)
            this.dropToolItemProvider.dispose();
        if (this.changeContextItemProvider != null)
            this.changeContextItemProvider.dispose();
        if (this.createInstanceItemProvider != null)
            this.createInstanceItemProvider.dispose();
        if (this.setValueItemProvider != null)
            this.setValueItemProvider.dispose();
        if (this.unsetValueItemProvider != null)
            this.unsetValueItemProvider.dispose();
        if (this.deleteElementItemProvider != null)
            this.deleteElementItemProvider.dispose();
        if (this.createViewItemProvider != null)
            this.createViewItemProvider.dispose();
        if (this.deleteViewItemProvider != null)
            this.deleteViewItemProvider.dispose();
        if (this.conditionalNodeStyleItemProvider != null)
            this.conditionalNodeStyleItemProvider.dispose();
        if (this.conditionalEdgeStyleItemProvider != null)
            this.conditionalEdgeStyleItemProvider.dispose();
        if (this.formDescriptionItemProvider != null)
            this.formDescriptionItemProvider.dispose();
        if (this.textfieldDescriptionItemProvider != null)
            this.textfieldDescriptionItemProvider.dispose();
        if (this.checkboxDescriptionItemProvider != null)
            this.checkboxDescriptionItemProvider.dispose();
        if (this.selectDescriptionItemProvider != null)
            this.selectDescriptionItemProvider.dispose();
        if (this.multiSelectDescriptionItemProvider != null)
            this.multiSelectDescriptionItemProvider.dispose();
        if (this.textAreaDescriptionItemProvider != null)
            this.textAreaDescriptionItemProvider.dispose();
        if (this.radioDescriptionItemProvider != null)
            this.radioDescriptionItemProvider.dispose();
        if (this.barChartDescriptionItemProvider != null)
            this.barChartDescriptionItemProvider.dispose();
        if (this.pieChartDescriptionItemProvider != null)
            this.pieChartDescriptionItemProvider.dispose();
        if (this.flexboxContainerDescriptionItemProvider != null)
            this.flexboxContainerDescriptionItemProvider.dispose();
        if (this.buttonDescriptionItemProvider != null)
            this.buttonDescriptionItemProvider.dispose();
        if (this.textfieldDescriptionStyleItemProvider != null)
            this.textfieldDescriptionStyleItemProvider.dispose();
        if (this.conditionalTextfieldDescriptionStyleItemProvider != null)
            this.conditionalTextfieldDescriptionStyleItemProvider.dispose();
        if (this.checkboxDescriptionStyleItemProvider != null)
            this.checkboxDescriptionStyleItemProvider.dispose();
        if (this.conditionalCheckboxDescriptionStyleItemProvider != null)
            this.conditionalCheckboxDescriptionStyleItemProvider.dispose();
        if (this.selectDescriptionStyleItemProvider != null)
            this.selectDescriptionStyleItemProvider.dispose();
        if (this.conditionalSelectDescriptionStyleItemProvider != null)
            this.conditionalSelectDescriptionStyleItemProvider.dispose();
        if (this.multiSelectDescriptionStyleItemProvider != null)
            this.multiSelectDescriptionStyleItemProvider.dispose();
        if (this.conditionalMultiSelectDescriptionStyleItemProvider != null)
            this.conditionalMultiSelectDescriptionStyleItemProvider.dispose();
        if (this.textareaDescriptionStyleItemProvider != null)
            this.textareaDescriptionStyleItemProvider.dispose();
        if (this.conditionalTextareaDescriptionStyleItemProvider != null)
            this.conditionalTextareaDescriptionStyleItemProvider.dispose();
        if (this.radioDescriptionStyleItemProvider != null)
            this.radioDescriptionStyleItemProvider.dispose();
        if (this.conditionalRadioDescriptionStyleItemProvider != null)
            this.conditionalRadioDescriptionStyleItemProvider.dispose();
        if (this.buttonDescriptionStyleItemProvider != null)
            this.buttonDescriptionStyleItemProvider.dispose();
        if (this.conditionalButtonDescriptionStyleItemProvider != null)
            this.conditionalButtonDescriptionStyleItemProvider.dispose();
        if (this.barChartDescriptionStyleItemProvider != null)
            this.barChartDescriptionStyleItemProvider.dispose();
        if (this.conditionalBarChartDescriptionStyleItemProvider != null)
            this.conditionalBarChartDescriptionStyleItemProvider.dispose();
        if (this.pieChartDescriptionStyleItemProvider != null)
            this.pieChartDescriptionStyleItemProvider.dispose();
        if (this.conditionalPieChartDescriptionStyleItemProvider != null)
            this.conditionalPieChartDescriptionStyleItemProvider.dispose();
        if (this.labelDescriptionItemProvider != null)
            this.labelDescriptionItemProvider.dispose();
        if (this.labelDescriptionStyleItemProvider != null)
            this.labelDescriptionStyleItemProvider.dispose();
        if (this.conditionalLabelDescriptionStyleItemProvider != null)
            this.conditionalLabelDescriptionStyleItemProvider.dispose();
        if (this.linkDescriptionItemProvider != null)
            this.linkDescriptionItemProvider.dispose();
        if (this.linkDescriptionStyleItemProvider != null)
            this.linkDescriptionStyleItemProvider.dispose();
        if (this.conditionalLinkDescriptionStyleItemProvider != null)
            this.conditionalLinkDescriptionStyleItemProvider.dispose();
        if (this.listDescriptionItemProvider != null)
            this.listDescriptionItemProvider.dispose();
        if (this.listDescriptionStyleItemProvider != null)
            this.listDescriptionStyleItemProvider.dispose();
        if (this.conditionalListDescriptionStyleItemProvider != null)
            this.conditionalListDescriptionStyleItemProvider.dispose();
    }

}
